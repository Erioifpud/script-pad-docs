import{_ as n,c as a,a as e,o as t}from"./app-CQ0RYBrR.js";const p={};function l(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="registry" tabindex="-1"><a class="header-anchor" href="#registry"><span>Registry</span></a></h1><p>注册表相关操作，只有读，没有写。</p><p><code>value</code> 所有类型的数据都会以字符串形式返回，<code>valueType</code> 用于区分数据类型，不过有所简化，会出现的值有 <code>string</code>、<code>dword</code>、<code>qword</code>、<code>binary</code>，其中 <code>binary</code> 的数据会以逗号分隔。</p><h2 id="接口描述" tabindex="-1"><a class="header-anchor" href="#接口描述"><span>接口描述</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">type</span> <span class="token class-name">HKeyType</span> <span class="token operator">=</span> <span class="token string">&#39;ClassesRoot&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;CurrentUser&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;LocalMachine&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;Users&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;PerformanceData&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;PerformanceText&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;PerformanceNLSText&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;CurrentConfig&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;DynData&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;CurrentUserLocalSettings&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">RegValue</span> <span class="token punctuation">{</span></span>
<span class="line">  success<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  reason<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  valueType<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  lastWriteTime<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">RegKeys</span> <span class="token punctuation">{</span></span>
<span class="line">  success<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  reason<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  keys<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">RegItem</span> <span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  valueType<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">RegItems</span> <span class="token punctuation">{</span></span>
<span class="line">  success<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  reason<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  items<span class="token operator">:</span> RegItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="getvalue" tabindex="-1"><a class="header-anchor" href="#getvalue"><span>getValue</span></a></h2><p>获取注册表中的值，<code>hkey</code> 为注册表路径，<code>path</code> 为注册表项路径，<code>name</code> 为注册表项名称。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getValue</span><span class="token punctuation">(</span>hkey<span class="token operator">:</span> HKeyType<span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>RegValue<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="getkeys" tabindex="-1"><a class="header-anchor" href="#getkeys"><span>getKeys</span></a></h2><p>获取注册表中的所有子项的名称，<code>hkey</code> 为注册表路径，<code>path</code> 为注册表项路径。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getKeys</span><span class="token punctuation">(</span>hkey<span class="token operator">:</span> HKeyType<span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>RegKeys<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="getvalues" tabindex="-1"><a class="header-anchor" href="#getvalues"><span>getValues</span></a></h2><p>获取注册表中的所有子项的值，<code>hkey</code> 为注册表路径，<code>path</code> 为注册表项路径。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getValues</span><span class="token punctuation">(</span>hkey<span class="token operator">:</span> HKeyType<span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>RegItems<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,16)]))}const c=n(p,[["render",l],["__file","registry.html.vue"]]),r=JSON.parse('{"path":"/builtin/modules/registry.html","title":"Registry","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"接口描述","slug":"接口描述","link":"#接口描述","children":[]},{"level":2,"title":"getValue","slug":"getvalue","link":"#getvalue","children":[]},{"level":2,"title":"getKeys","slug":"getkeys","link":"#getkeys","children":[]},{"level":2,"title":"getValues","slug":"getvalues","link":"#getvalues","children":[]}],"git":{"updatedTime":1733567113000,"contributors":[{"name":"Erioifpud","username":"Erioifpud","email":"erioifpud.cn@gmail.com","commits":1,"url":"https://github.com/Erioifpud"}]},"filePathRelative":"builtin/modules/registry.md"}');export{c as comp,r as data};
