import{_ as n,c as a,a as e,o as t}from"./app-CQ0RYBrR.js";const l={};function p(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="remotecall" tabindex="-1"><a class="header-anchor" href="#remotecall"><span>RemoteCall</span></a></h1><p>远程调用相关的操作。</p><p>目前只实现了本地调用（手动运行脚本）和 HTTP 远程调用。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// 这是一个使用了 RemoteCall 模块的脚本</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 判断当前调用模式，仅在接口调用脚本时运行</span></span>
<span class="line"><span class="token keyword">const</span> mode <span class="token operator">=</span> <span class="token keyword">await</span> RemoteCall<span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 获得请求体中的 text 数据</span></span>
<span class="line"><span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> RemoteCall<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> body<span class="token punctuation">.</span>text</span>
<span class="line"></span>
<span class="line"><span class="token comment">// 语音播报内容</span></span>
<span class="line"><span class="token constant">TTS</span><span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 返回响应，让请求正常结束</span></span>
<span class="line"><span class="token keyword">await</span> RemoteCall<span class="token punctuation">.</span><span class="token function">toResponse</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  message<span class="token operator">:</span> <span class="token string">&#39;播报完成&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 调用脚本</span></span>
<span class="line"><span class="token comment"># 点击脚本的标题栏复制脚本 ID，填入请求体的 id 字段</span></span>
<span class="line"><span class="token comment"># 请求体中的 data 字段为传入脚本的参数，这个的类型是一个 JSON 对象，具体取决于脚本应该接收的参数</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">--location</span> <span class="token string">&#39;localhost:56789/api/run&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">--header</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">--data</span> <span class="token string">&#39;{</span>
<span class="line">    &quot;id&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,</span>
<span class="line">    &quot;data&quot;: {</span>
<span class="line">        &quot;hello&quot;: &quot;world&quot;</span>
<span class="line">    }</span>
<span class="line">}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="接口描述" tabindex="-1"><a class="header-anchor" href="#接口描述"><span>接口描述</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">enum</span> Mode <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 本地调用</span></span>
<span class="line">  <span class="token constant">LOCAL</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// HTTP 请求调用</span></span>
<span class="line">  <span class="token constant">HTTP</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="getmode" tabindex="-1"><a class="header-anchor" href="#getmode"><span>getMode</span></a></h2><p>获取当前的调用模式。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token function">getMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Mode</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="getbody" tabindex="-1"><a class="header-anchor" href="#getbody"><span>getBody</span></a></h2><p>获取本次调用的请求体。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="toresponse" tabindex="-1"><a class="header-anchor" href="#toresponse"><span>toResponse</span></a></h3><p>脚本执行后需要返回的数据。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">toResponse</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,19)]))}const c=n(l,[["render",p],["__file","remote-call.html.vue"]]),r=JSON.parse('{"path":"/builtin/modules/remote-call.html","title":"RemoteCall","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":2,"title":"接口描述","slug":"接口描述","link":"#接口描述","children":[]},{"level":2,"title":"getMode","slug":"getmode","link":"#getmode","children":[]},{"level":2,"title":"getBody","slug":"getbody","link":"#getbody","children":[{"level":3,"title":"toResponse","slug":"toresponse","link":"#toresponse","children":[]}]}],"git":{"updatedTime":1733566384000,"contributors":[{"name":"Erioifpud","username":"Erioifpud","email":"erioifpud.cn@gmail.com","commits":2,"url":"https://github.com/Erioifpud"},{"name":"Erioifpud","username":"Erioifpud","email":"erioifpud@zuo.si","commits":1,"url":"https://github.com/Erioifpud"}]},"filePathRelative":"builtin/modules/remote-call.md"}');export{c as comp,r as data};
