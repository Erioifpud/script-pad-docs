import{_ as a,c as s,o as n,a as e}from"./app-C9xD3bv1.js";const t={},p=e(`<h1 id="clipboard" tabindex="-1"><a class="header-anchor" href="#clipboard"><span>Clipboard</span></a></h1><p>剪切板相关的操作。</p><h2 id="readimagebase64" tabindex="-1"><a class="header-anchor" href="#readimagebase64"><span>readImageBase64</span></a></h2><p>读取剪切板中的图片，返回图片的 base64 编码。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">readImageBase64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="readimagebytes" tabindex="-1"><a class="header-anchor" href="#readimagebytes"><span>readImageBytes</span></a></h2><p>读取剪切板中的图片，返回图片的二进制数据。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">readImageBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Uint8Array<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="writeimage" tabindex="-1"><a class="header-anchor" href="#writeimage"><span>writeImage</span></a></h2><p>将图片写入剪切板，参数 <code>data</code> 可以是 base64 或者二进制数据。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">writeImage</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="readhtml" tabindex="-1"><a class="header-anchor" href="#readhtml"><span>readHTML</span></a></h2><p>读取剪切板中的 HTML。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">readHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="readplain" tabindex="-1"><a class="header-anchor" href="#readplain"><span>readPlain</span></a></h2><p>读取剪切板中的纯文本。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">readPlain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="readrichtext" tabindex="-1"><a class="header-anchor" href="#readrichtext"><span>readRichText</span></a></h2><p>读取剪切板中的富文本。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">readRichText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="writetext" tabindex="-1"><a class="header-anchor" href="#writetext"><span>writeText</span></a></h2><p>将文本写入剪切板。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">writeText</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="writerichtext" tabindex="-1"><a class="header-anchor" href="#writerichtext"><span>writeRichText</span></a></h2><p>将富文本写入剪切板。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">writeRichText</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="readfiles" tabindex="-1"><a class="header-anchor" href="#readfiles"><span>readFiles</span></a></h2><p>读取剪切板中的文件路径。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">readFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="readfileurls" tabindex="-1"><a class="header-anchor" href="#readfileurls"><span>readFileUrls</span></a></h2><p>读取剪切板中的文件路径，在 Windows 下和 <code>readFiles</code> 没区别，其他环境下会带有 <code>file://</code> 前缀。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">readFileUrls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,41),i=[p];function l(r,c){return n(),s("div",null,i)}const d=a(t,[["render",l],["__file","clipboard.html.vue"]]),u=JSON.parse('{"path":"/builtin/modules/clipboard.html","title":"Clipboard","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"readImageBase64","slug":"readimagebase64","link":"#readimagebase64","children":[]},{"level":2,"title":"readImageBytes","slug":"readimagebytes","link":"#readimagebytes","children":[]},{"level":2,"title":"writeImage","slug":"writeimage","link":"#writeimage","children":[]},{"level":2,"title":"readHTML","slug":"readhtml","link":"#readhtml","children":[]},{"level":2,"title":"readPlain","slug":"readplain","link":"#readplain","children":[]},{"level":2,"title":"readRichText","slug":"readrichtext","link":"#readrichtext","children":[]},{"level":2,"title":"writeText","slug":"writetext","link":"#writetext","children":[]},{"level":2,"title":"writeRichText","slug":"writerichtext","link":"#writerichtext","children":[]},{"level":2,"title":"readFiles","slug":"readfiles","link":"#readfiles","children":[]},{"level":2,"title":"readFileUrls","slug":"readfileurls","link":"#readfileurls","children":[]}],"git":{"updatedTime":1716981463000,"contributors":[{"name":"Erioifpud","email":"erioifpud@zuo.si","commits":1}]},"filePathRelative":"builtin/modules/clipboard.md"}');export{d as comp,u as data};
