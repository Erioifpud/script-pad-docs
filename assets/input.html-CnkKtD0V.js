import{_ as s,c as n,o as a,a as e}from"./app-BJ9HRwS6.js";const p={},l=e(`<h1 id="input" tabindex="-1"><a class="header-anchor" href="#input"><span>Input</span></a></h1><p>输入弹窗相关的操作。</p><h2 id="接口描述" tabindex="-1"><a class="header-anchor" href="#接口描述"><span>接口描述</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">BaseNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  id<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  value<span class="token operator">:</span> <span class="token constant">T</span></span>
<span class="line">  placeholder<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">TextNode</span> <span class="token keyword">extends</span> <span class="token class-name">BaseNode<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  type<span class="token operator">:</span> <span class="token string">&#39;text&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">AreaNode</span> <span class="token keyword">extends</span> <span class="token class-name">BaseNode<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  type<span class="token operator">:</span> <span class="token string">&#39;area&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">SelectOption</span> <span class="token punctuation">{</span></span>
<span class="line">  label<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  value<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">SelectNode</span> <span class="token keyword">extends</span> <span class="token class-name">BaseNode<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  type<span class="token operator">:</span> <span class="token string">&#39;select&#39;</span></span>
<span class="line">  options<span class="token operator">:</span> SelectOption<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">SliderNode</span> <span class="token keyword">extends</span> <span class="token class-name">BaseNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  type<span class="token operator">:</span> <span class="token string">&#39;slider&#39;</span></span>
<span class="line">  min<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line">  max<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line">  step<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">ColorNode</span> <span class="token keyword">extends</span> <span class="token class-name">BaseNode<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  type<span class="token operator">:</span> <span class="token string">&#39;color&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 预设颜色表</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">ColorMapNode</span> <span class="token keyword">extends</span> <span class="token class-name">BaseNode<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  type<span class="token operator">:</span> <span class="token string">&#39;colorMap&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Node</span> <span class="token operator">=</span> TextNode <span class="token operator">|</span> AreaNode <span class="token operator">|</span> SelectNode <span class="token operator">|</span> SliderNode <span class="token operator">|</span> ColorNode <span class="token operator">|</span> ColorMapNode<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create</span></a></h2><p>创建获取用户输入的弹窗，根据自定义参数生成表单，用户填写完成后返回<strong>答案构成的对象</strong>。</p><p>目前没有 <code>required</code> 属性，所以需要自己写校验。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span>template<span class="token operator">:</span> Node<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),t=[l];function o(i,c){return a(),n("div",null,t)}const d=s(p,[["render",o],["__file","input.html.vue"]]),u=JSON.parse('{"path":"/builtin/modules/input.html","title":"Input","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"接口描述","slug":"接口描述","link":"#接口描述","children":[]},{"level":2,"title":"create","slug":"create","link":"#create","children":[]}],"git":{"updatedTime":1720781414000,"contributors":[{"name":"Erioifpud","email":"erioifpud@zuo.si","commits":2}]},"filePathRelative":"builtin/modules/input.md"}');export{d as comp,u as data};
