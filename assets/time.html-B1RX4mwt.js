import{_ as a,c as s,o as n,a as e}from"./app-BK_yStz4.js";const t={},o=e(`<h1 id="time" tabindex="-1"><a class="header-anchor" href="#time"><span>Time</span></a></h1><p>时间格式、运算相关的操作。</p><h2 id="format" tabindex="-1"><a class="header-anchor" href="#format"><span>format</span></a></h2><p>对时间数据进行格式化，<code>date</code> 为需要格式化的时间，<code>formatStr</code> 为格式化字符串，参考 <code>date-fns</code>。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">format</span><span class="token punctuation">(</span>date<span class="token operator">:</span> Date <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> formatStr<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="parse" tabindex="-1"><a class="header-anchor" href="#parse"><span>parse</span></a></h2><p>将时间字符串解析成时间对象，<code>dateStr</code> 为时间字符串，<code>formatStr</code> 为格式化字符串，<code>referenceDate</code> 为对 <code>dateStr</code> 遗漏信息的补全，参考 <code>date-fns</code>。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">parse</span><span class="token punctuation">(</span>dateStr<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> formatStr<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> referenceDate<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> Date<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Date<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),p=[o];function r(c,i){return n(),s("div",null,p)}const d=a(t,[["render",r],["__file","time.html.vue"]]),u=JSON.parse('{"path":"/builtin/modules/time.html","title":"Time","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"format","slug":"format","link":"#format","children":[]},{"level":2,"title":"parse","slug":"parse","link":"#parse","children":[]}],"git":{"updatedTime":1720781414000,"contributors":[{"name":"Erioifpud","email":"erioifpud@zuo.si","commits":1}]},"filePathRelative":"builtin/modules/time.md"}');export{d as comp,u as data};
